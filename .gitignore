
import json
import numpy as np
import time
import pandas as pd
import matplotlib.pyplot as plt
from collections import deque
import requests

# -----------------------------------------------------------------------------------------
L1=3
L2=7
# ----------------------------------------------------------------------------------------
url = "https://api.coinex.com/v1/market/kline?market=BTCUSDT&limit=2&type=1min"
data= requests.get(url).json()["data"]
prices = pd.DataFrame(data)[2].astype(float).values

print("آخرین قیمت:", prices[0])

list1 = deque(maxlen=L1)
list2 = deque(maxlen=L2)
list1.extend(prices)
list2.extend(prices)

is_bought = False
buy_price = 0
balance= 100
while True:
    time.sleep(60)
    url = "https://api.coinex.com/v1/market/kline?market=BTCUSDT&limit=2&type=1min"
    data= requests.get(url).json()["data"]
    prices = pd.DataFrame(data)[2].astype(float).values
    # print("last price", prices[0])
    list1.append(prices[0])
    list2.append(prices[0])
    # print("-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*")
    cmt = time.localtime()
    ct= time.strftime("%H:%M:%S", cmt)
    ma1 = pd.Series(list1).rolling(window=L1).mean()
    ma2 = pd.Series(list2).rolling(window=L2).mean()
    # print("-----------------------------------------")
    # print(ct, "\t, last price:", prices[0])
    # print("میانگین متحرک 1:", ma1.iloc[-1])
    # print("مقادیر لیست مووینگ1:", list1, len(list1))
    # print("میانگین متحرک  2:", ma2.iloc[-1])
    # print("مقادیر لیست مووینگ2:", list2, len(list2))
    if ma2.iloc[-1] > ma1.iloc[-1]:
        if not is_bought:
            is_bought = True
            buy_price = prices[0]
            print("buy in price:", buy_price, "and in time:", ct)
    if ma1.iloc[-1] > ma2.iloc[-1]:
        if is_bought:
            is_bought = False
            profit = prices[0] - buy_price
            pro= (profit/buy_price)*100
            balance = balance + (balance*(pro/100))
            print("sell in price:", prices[0], "and in time:", ct)
            print("profit:", profit)
            print("profit%:", pro)
            print("balance:", balance)
